{"version":3,"sources":["components/Nav/nav.module.css","components/Profile/Post/Post.module.css","components/Profile/Post/Post/Post.module.css","assets/images/spinner.gif","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/DialogsMessage/dialogsMessage.module.css","components/lou.png","utils/validators/validators.js","components/Nav/Nav.jsx","components/Header/Header.jsx","api/api.js","redux/auth-reducer.jsx","components/Header/HeaderContainer.jsx","redux/profile-reducer.jsx","components/Profile/Post/Post/Post.jsx","components/Profile/Post/Posts.jsx","components/Profile/ProfileStatusWithHooks.jsx","common/FormsControls/FormControls.js","components/Profile/Profile.jsx","common/Preloader.jsx","components/Profile/Content.jsx","hoc/withAuthRedirect.js","components/Profile/ContentContainer.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/DialogsMessage/DIalogsMessage.jsx","components/Dialogs/Dialogs.jsx","redux/dialogs-reducer.jsx","components/Dialogs/DialogsContainer.jsx","common/Paginator.jsx","components/Users/Users.jsx","redux/friends-reducer.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Login/Login.jsx","redux/app-reducer.jsx","App.js","serviceWorker.js","redux/redux-store.jsx","index.js","components/Users/users.module.css","common/FormsControls/FormControls.module.css","assets/images/2.jpg","components/Dialogs/Dialogs.module.css"],"names":["module","exports","maxLength","Nav","className","style","nav","to","Header","props","src","require","alt","width","float","backgroundColor","margin","padding","isAuth","login","onClick","logout","instance","axios","baseURL","withCredentials","headers","authAPI","get","email","password","rememberMe","post","delete","profileAPI","id","status","put","photoFile","formData","FormData","append","profile","usersAPI","getUsers","currentPage","pageSize","then","response","data","follow","unfollow","initialState","setAuthUserData","type","payload","getAuthUserData","dispatch","resultCode","authReducer","state","action","HeaderContainer","this","React","Component","connect","Auth","posts","message","likes","newPostText","setStatus","savePhotoSuccess","file","getUserProfile","profileReducer","stateCopy","NewPostElement","photos","Post","postitem","Posts","memo","wall","stateWall","map","wallpost","key","createRef","content","ref","onChange","text","current","value","addPostwall","ProfileStatus","useState","editMode","setEditMode","useEffect","autoFocus","event","currentTarget","onBlur","updateStatus","Textarea","input","meta","hasError","touched","error","toSp","Input","createField","placeholder","name","validators","component","Field","validate","ProfileData","isOwner","goToEditMode","lookingForAJob","aboutMe","lookingForAJobDescription","Object","keys","contacts","contactTitle","contactValue","Contact","ProfileDataForm","reduxForm","form","handleSubmit","onSubmit","Profile","fullName","large","propho","e","target","files","length","savePhoto","initialValues","saveProfile","Preloader","preloader","Content","mapStateToProps","withAuthRedirect","RedirectComponent","ProfileContainer","userId","match","params","history","push","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","withRouter","ProfilePage","a","getState","messages","stopSubmit","_error","DialogItem","dialogItem","DilaogMessage","required","maxLength69","AddMessageFormRedux","knopka","Dialogs","CurrentDialog","states","users","di","DialogsMessage","msg","wrapperitem","addMessage","newMessageBody","dialogsReducer","MessagesPage","Paginator","portionSize","portionNumber","setPortionNumber","pagesCount","Math","ceil","totalUsersCount","pages","i","portionCount","firstOfPortionNumber","lastOfPortionNumber","styles","but","filter","p","cur","uncur","onPageChanged","toString","Users","aua","user","small","kart","followed","disabled","followingInProgress","some","isFetching","setUsers","setCurrentPage","setTotalUserCount","count","toggleIsFetching","isf","toggleFollowingProgress","friendsReducer","u","userID","window","fie","Friends","withRedirrect","getUserThunkCreator","userAPI","items","totalCount","LoginReduxForm","color","marginLeft","initialized","appReducer","App","initializeApp","path","render","DialogsContainer","app","promise","Promise","all","Boolean","location","hostname","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.5a91db17.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"nav_nav__1MN5G\",\"links\":\"nav_links__2Z7nS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postitem\":\"Post_postitem__2apjV\",\"content\":\"Post_content__254C9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postitem\":\"Post_postitem__3YZpM\"};","module.exports = __webpack_public_path__ + \"static/media/spinner.85ed5435.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogItem_dialogItem__3SgxU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"dialogsMessage_message__35rMY\"};","module.exports = __webpack_public_path__ + \"static/media/lou.bc25bfb4.png\";","export const required = value => {\r\n\tif (value) return undefined;\r\n\r\n\treturn \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n\tif (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n\t\treturn undefined;\r\n}","import React from 'react';\r\nimport style from './nav.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\n\r\nconst Nav = () => {\r\n\treturn (\r\n\t\t<div className ={`${style.nav} wrapper`} >\r\n\t\t\t\r\n\t\t\t<ul>\r\n\t\t\t\t<li><NavLink to = '/profile'>Profile</NavLink></li>\r\n\t\t\t\t<li><NavLink to = '/dialogs'>Messages</NavLink></li>\r\n\t\t\t\t<li><NavLink to = '/friends'>Friends</NavLink></li>\r\n\t\t\t\t\r\n\t\t\t\t{/*<li><a href = '#a'>News</a></li>\r\n\t\t\t\t<li><a href = '#a'>Music</a></li>\r\n\t\t\t\t<li><a href = '#a'>Settings</a></li>*/}\r\n\t\t\t</ul>\r\n\r\n\t\t</div>\t\r\n\t);\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n\treturn (\r\n\t<header className='header wrapper'>\t\r\n\t<img src = {require('./../lou.png')} alt = \"1240\" width = \"10%\"/>\r\n\t<div style = { { float : 'right' , backgroundColor : 'Black', margin : '20px', padding : '12px'} }>\r\n\t\t{props.isAuth \r\n\t\t\t? <div>{props.login} <button onClick = {props.logout}>Log Out</button></div>\r\n\t\t\t:<NavLink to = {'/login'}> Login </NavLink>}\r\n\t</div>\r\n\r\n\r\n\t<h5><p>HYPNO</p></h5>\r\n    <h1><p>Simple NETW0RKKKK</p></h1> \r\n    </header>\r\n\t);\r\n}\r\n\r\nexport default Header; \r\n","import * as axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n\tbaseURL : 'https://social-network.samuraijs.com/api/1.0/',\r\n\twithCredentials : true,\r\n\theaders : {\"API-KEY\" : \"0345e7f3-3e93-40f9-b140-50e5549d38fa\"}\r\n})\r\n\r\nconst usersAPI = {\r\n\t\r\n\tgetUsers (currentPage, pageSize) {\r\n\t\treturn \tinstance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n\t\t\t\t.then(response => response.data)\r\n\t},\r\n\r\n\tfollow (id) {\r\n\t\treturn instance.post(`follow/${id}`)\r\n\t},\r\n\r\n\tunfollow (id) {\r\n\t\treturn instance.delete(`follow/${id}`)\r\n\t}\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const authAPI = {\r\n\tme () {\r\n\t\treturn instance.get(`auth/me`)\r\n\r\n\t},\r\n\tlogin (email, password, rememberMe = false) {\r\n\t\treturn instance.post(`auth/login`, {email, password, rememberMe})\r\n\r\n\t},\r\n\tlogout () {\r\n\t\treturn instance.delete(`auth/login`)\r\n\r\n\t}\r\n}\r\n\r\nexport const profileAPI = {\r\n\tgetProfile (id) {\r\n\t\treturn \tinstance.get('profile/' + id)\r\n\t}\r\n,\r\n\tgetStatus (id) {\r\n\t\treturn \tinstance.get('profile/status/' + id)\r\n\t}\r\n\r\n,\r\n\tupdateStatus (status) {\r\n\t\treturn \tinstance.put('profile/status', {status : status})\r\n\t}\r\n,   \r\n\tsavePhoto (photoFile) {\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append('image', photoFile);\r\n\r\n\t\treturn instance.put('profile/photo', formData, {\r\n\t\t\theaders : {\r\n\t\t\t\t'Content-Type' : 'multipart/form-data'\r\n\t\t\t}\r\n\t\t})\r\n}\r\n,\r\n\tsaveProfile (profile) {debugger\r\n\t\treturn \tinstance.put('profile', profile)\r\n\t}\r\n}\r\nexport default usersAPI;\r\n","import {authAPI} from './../api/api.js';\r\nimport {stopSubmit} from 'redux-form';\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = { \r\n\tid : null,\r\n\temail : null,\r\n\tlogin : null,\r\n\tisAuth : false\r\n}\r\n\r\nconst authReducer = ( state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\t\r\n\t\t\r\n\t \tcase SET_USER_DATA:\r\n\t \t\t\treturn {\r\n\t \t\t\t\t...state,\r\n\t \t\t\t\t...action.payload\t \t\t\t\t\r\n\t \t\t\t};\r\n\t \t\r\n\t \tdefault:\r\n\t \t\treturn state;\r\n\r\n\t}\r\n}\r\n\r\nexport let setAuthUserData = (id, email, login, isAuth) => {\r\n\treturn ({type : 'SET_USER_DATA', payload : {id, email, login, isAuth} })\r\n}\r\n\r\nexport let getAuthUserData = () => (dispatch) => {\r\n\t\treturn authAPI.me().then(response => { \r\n\t\t\t\t\tif (response.data.resultCode === 0) {\r\n\t\t\t\t\t\t\tlet {id, login, email} = response.data.data;\r\n\t\t\t\t\t\t\tdispatch(setAuthUserData(id, email, login, true))\r\n\t\t\t\t\t}\r\n\t\t})\r\n}\r\n\r\nexport let login = (email, password, rememberMe) => (dispatch) => {\r\n\t\tauthAPI.login(email, password, rememberMe).then(response => { \r\n\t\t\t\t\tif (response.data.resultCode === 0) {\r\n\t\t\t\t\t\t\tdispatch(getAuthUserData())\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet message = response.data.messages.length > 0 ? response.data.messages[0] : 'Common error'\r\n\t\t\t\t\t\tdispatch(stopSubmit('login', {_error: message}))\r\n\t\t\t\t\t}\r\n\t\t})\r\n}\r\n\r\nexport let logout = () => (dispatch) => {\r\n\t\tauthAPI.logout().then(response => { \r\n\t\t\t\t\tif (response.data.resultCode === 0) {\r\n\t\t\t\t\t\t\tdispatch(setAuthUserData(null, null, null, false))\r\n\t\t\t\t\t}\r\n\t\t})\r\n}\r\n\r\n\r\nexport default authReducer;\r\n\r\n","import React from 'react';\r\nimport Header from './Header'\r\nimport {logout, getAuthUserData} from './../../redux/auth-reducer';\r\nimport {connect} from\t\"react-redux\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\t\r\n\trender () {\r\n\t\treturn <Header {...this.props} />\r\n\t}\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({ isAuth : state.Auth.isAuth, \r\n\t\t\t\t\t\t\t\t\t  login : state.Auth.login\r\n });\r\n\r\nexport default connect (mapStateToProps, {logout, getAuthUserData}) (HeaderContainer); \r\n","import {profileAPI} from './../api/api.js';\r\nimport {stopSubmit} from 'redux-form';\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst UPDATE_NEW_POST = 'UPDATE_NEW_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = { posts:[\r\n\t\t\t{message:'New Post', id : '1'},\r\n\t\t\t{message:'My Post', likes:'12', id : '2'},\r\n\t\t\t{message:'Add Post', likes:'13', id : '3'},\r\n\t\t\t{message:'Send Message', likes:'1', id : '4'}\r\n\t\t\t], newPostText: '',\r\n\t\t\tprofile : null,\r\n\t\t\tstatus : ''\r\n}\r\n\r\n\r\n\r\n\r\nconst profileReducer = ( state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\t\r\n\t\tcase ADD_POST:{ return {...state, posts : [{message: state.newPostText, likes: '18'},...state.posts], newPostText : '' }\r\n\r\n\t \t}\t\r\n\t \tcase UPDATE_NEW_POST:{\r\n\t \t\tlet stateCopy = {...state};\r\n\t \t\tstateCopy.newPostText = action.NewPostElement;\r\n\t \t\t\treturn stateCopy;\r\n\t \t}\r\n\t \tcase SET_USER_PROFILE:{\r\n\t \t\t\treturn {...state, profile: action.profile};\r\n\t \t}\r\n\r\n\t \tcase SET_STATUS:{\r\n\t \t\t\treturn {...state, status: action.status};\r\n\t \t}\r\n\r\n\t \tcase SAVE_PHOTO_SUCCESS:{debugger\r\n\t \t\t\treturn {...state, profile : {...state.profile, photos : action.file}};\r\n\t \t}\r\n\r\n\t \tdefault:\r\n\t \t\treturn state;\r\n\r\n\t}\r\n}\r\n\r\nexport let addPostwall = () => {\r\n\treturn ({type : 'ADD_POST'})\r\n}\r\n\r\nexport let onChange = (text) => {\r\n\treturn ({type : 'UPDATE_NEW_POST', NewPostElement : text })\r\n}\r\n\r\nexport let setUserProfile = (profile) => {\r\n\treturn ({type : 'SET_USER_PROFILE', profile })\r\n}\r\n\r\nexport let setStatus = (status) => {\r\n\treturn ({type : 'SET_STATUS', status })\r\n}\r\n\r\nexport let savePhotoSuccess = (file) => {\r\n\treturn ({type : 'SAVE_PHOTO_SUCCESS', file })\r\n}\r\n\r\nexport let getUserProfile = (id) =>\t(dispatch) => {\r\n\t\tprofileAPI.getProfile(id)\r\n\t\t.then(response => {dispatch(setUserProfile(response.data)) })\r\n\r\n\t}\r\n\r\nexport let getStatus = (id) =>\t(dispatch) => {\r\n\t\tprofileAPI.getStatus(id)\r\n\t\t.then(response => {dispatch(setStatus(response.data)) })\r\n\r\n\t}\r\n\r\nexport const updateStatus = (status) => (dispatch) => {\r\n\t\tprofileAPI.updateStatus(status)\r\n\t\t.then(response => {\r\n\t\t\tif (response.data.resultCode === 0)\r\n\t\t\t{dispatch(setStatus(status));} })\r\n\r\n\t}\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n\t\tlet response = await profileAPI.savePhoto(file);\r\n\t\tif (response.data.resultCode === 0) {\r\n\t\t\tdispatch(savePhotoSuccess(response.data.data.photos))\r\n\t\t} \r\n\r\n\t}\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n\t\tconst userId = getState().Auth.id;\r\n\t\tlet response = await profileAPI.saveProfile(profile);\r\n\t\tif (response.data.resultCode === 0) {\r\n\t\t\tdispatch(getUserProfile(userId))\r\n\t\t} else {\tlet message = response.data.messages.length > 0 ? response.data.messages[0] : 'Common error'\r\n\t\t\t\t\tdispatch(stopSubmit('profileData', {_error: message}))\r\n\t\t\t\t}\r\n\r\n\t}\r\n\r\nexport default profileReducer;\r\n\r\n","import React from 'react';\r\nimport style from './Post.module.css';\r\n\r\n\r\nconst Post = (props) => {\r\n\treturn <div>\r\n\r\n\t<div className = {style.postitem}>\r\n\t\t{props.message}     \r\n\t\t </div>\r\n\t</div>\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport style from './Post.module.css';\r\nimport Post from './Post/Post'\r\n\r\nconst Posts = React.memo((props) => {\r\n\t\r\n\r\nlet wall = props.stateWall.map( wallpost => <Post message = {wallpost.message}  key = {wallpost.id}\r\n\t\t \t /> )\r\n\r\n\r\n\tlet NewPostElement = React.createRef(); \r\n\r\n\tlet onPostChange = () => {\r\n\t\tlet text = NewPostElement.current.value;\r\n\t\tprops.onChange(text)\r\n\t}\r\n\r\n\tlet onAddPostWall = () => {\r\n\t\tprops.addPostwall();\r\n\t}\r\n\r\n\treturn <div>\r\n\r\n\r\n\t\t<div className = {`${style.content}  wrapper`}>\r\n\r\n\r\n\t\t\r\n\t\t\t<div >\r\n\t\t\t\t<textarea ref = {NewPostElement}\r\n\t\t\t\t onChange = {onPostChange}\r\n\t\t\t\t value = {props.newPostText} />\t\t\r\n\t\t\t\t<button onClick = {onAddPostWall}>ADD Post</button>\t\r\n\t\t\t</div>\r\n\r\n\t\t\t<div >\r\n\t\t\t\t{wall}\t\r\n\t\t\t</div>\r\n\r\n\r\n\t\t</div>\t</div>\r\n})\r\n\r\nexport default Posts;","import React, {useState, useEffect} from 'react';\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n\tlet [editMode, setEditMode] = useState(false);\r\n\tlet [status, setStatus] = useState(props.status);\r\n\t\t\t\r\n\tuseEffect(() => {setStatus(props.status)}, [props.status])\r\n\r\n\tconst activateMode = () => {\r\n\t\tsetEditMode(true)\r\n\t}\r\n\t\r\n\tconst deactivateMode = () => {\r\n\t\tsetEditMode(false);\r\n\t\tprops.updateStatus(status)\r\n\t}\r\n\t\r\n\tconst onStatusChange = (event) => {\r\n\t\t\tsetStatus(event.currentTarget.value)\r\n\t\t}\r\n\t\r\n\t\treturn <div>\t\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{!editMode &&\r\n\t\t\t\t\t<div > <span  onClick = {activateMode}>{props.status || 'Set Status'}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{editMode &&\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<input  autoFocus = {true}\r\n\t\t\t\t\t\t\t\tonChange = {onStatusChange}\r\n\t\t\t\t\t\t\t\tonBlur = {deactivateMode} \r\n\t\t\t\t\t\t\t\tvalue = {status}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\t\t\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t}\r\n\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport style from './FormControls.module.css';\r\nimport {Field} from 'redux-form';\r\n\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n\t\tconst hasError = meta.touched && meta.error\r\n\treturn (\r\n\t\t<div className = {style.toSp}>\r\n\t\t\t<textarea {...input} {...props}  className = {hasError ? style.error : ' ' }/>\r\n\t\t\t{hasError && <span>{meta.error}</span>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n\t\tconst hasError = meta.touched && meta.error\r\n\treturn (\r\n\t\t<div className = {style.toSp}>\r\n\t\t\t<input {...input} {...props}  className = {hasError ? style.error : ' ' }/>\r\n\t\t\t{hasError && <span>{meta.error}</span>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '' ) => (\r\n\t<div>\r\n\t\t<Field placeholder = {placeholder}\r\n\t\t\t   name = {name}\r\n\t\t\t   validate = {validators}\r\n\t\t\t   component = {component}\r\n\t\t\t   {...props} \r\n\t\t/>{text}\t   \r\n\t</div>\r\n)","import React, {useState} from 'react';\r\nimport ProfileStatus from './ProfileStatusWithHooks';\r\nimport propho from './../../assets/images/2.jpg';\r\nimport {createField, Input, Textarea} from './../../common/FormsControls/FormControls';\r\nimport {reduxForm} from 'redux-form';\r\n\r\nconst Profile = (props) => {\r\n\r\n\tlet [editMode, setEditMode] = useState(false);\r\n\t\r\n\tconst onMainPhotoSelected = (e) => {\r\n\t\tif (e.target.files.length) {\r\n\t\t\tprops.savePhoto(e.target.files[0])\r\n\t\t}\r\n\t};\r\n\r\n\tconst onSubmit = (formData) => {\r\n\t\tprops.saveProfile(formData);\r\n\t\tsetEditMode(false);\r\n\t}\r\n\r\n\treturn \t<div>\r\n\t\t<div>\r\n\t\t\t<h2>{props.profile.fullName}</h2>\r\n\t\t\t<div>\r\n\t\t\t\t<img src = {props.profile.photos.large || propho} alt = {'Protos'} />\r\n\r\n\t\t\t\t{!props.isOwner && <input  type = {'file'}\r\n\t\t\t\t\t\t\t\t\t\t   onChange = {onMainPhotoSelected}/>\r\n\t\t\t\t}\r\n\r\n\t\t\t</div>\t</div>\t\t\t\t\t\t   \r\n\t\t\t\t\t\t<ProfileStatus status = {props.status} updateStatus = {props.updateStatus}/>\r\n\r\n\r\n\t{!editMode \r\n\t\t? <ProfileData {...props}  goToEditMode = {() => {setEditMode(true)}}/> \r\n\t\t: <ProfileDataForm initialValues = {props.profile} profile = {props.profile} onSubmit = {onSubmit}/>}</div>\r\n}\r\n\r\n\r\nconst ProfileData = (props) => {\r\n\r\n\treturn <div>\r\n\t{!props.isOwner && <button onClick = {props.goToEditMode}>Edit Mode</button>}\r\n\t<div>\r\n\t\t<b>Looking for a job</b>: {props.profile.lookingForAJob ? 'Yes' : 'No'}\r\n\t</div>\r\n\t<div>\r\n\t\t<b>About me</b>: {props.profile.aboutMe}\r\n\t</div>\r\n\t<div>\r\n\t\t<b>My pro skills</b>: {props.profile.lookingForAJobDescription}\r\n\t</div>\r\n\t<div>\r\n\t\t<b>Contacts</b>: {Object.keys(props.profile.contacts).map(key => {\r\n\t\t\treturn <Contact contactTitle = {key} key = {key} contactValue = {props.profile.contacts[key]}/>\r\n\t\t})}\r\n\t</div>\r\n\r\n\t\t\r\n\t</div>\r\n\r\n}\r\n\r\nconst ProfileDataFormRedux = ({handleSubmit, profile}) => {\r\n\treturn \t<form onSubmit = {handleSubmit}>\t<b>Set Options</b>\r\n\r\n\t\t\t<div><button >Save</button></div>\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<b>Full name</b> {createField('Full name', 'fullName', [], Input)}\r\n\t\t\t</div>\t\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<b>Lookin' for a job</b> {createField('', 'lookingForAJob', [], Input, {type : 'checkbox'} )}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<b>My pro skills</b> {createField('skills', 'lookingForAJobDescription', [], Textarea )}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<b>About me</b> {createField('my info', 'aboutMe', [], Textarea )}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n\t\t\t\treturn <div>{key} :  {createField(key, 'contacts' + key, [], Input)} </div>})}\r\n\t\t\t</div>\r\n\r\n\r\n\t\t</form>\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n\treturn \t<div><b>{contactTitle}</b>: {contactValue} \t</div>\r\n\t\r\n}\r\n\r\nconst ProfileDataForm = reduxForm({form : 'profileData'})(ProfileDataFormRedux);\r\n\r\nexport default Profile;","import React from 'react';\r\nimport preloader from './../assets/images/spinner.gif'\r\n\r\nconst Preloader = () => {\r\n\treturn <div style = { { margin : '50px'} }>\r\n\t\t<img src ={preloader} alt = {'zerq'} />\r\n\r\n\t</div>\r\n\r\n}\r\n\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport Posts from './Post/Posts';\r\nimport Profile from './Profile'\r\nimport Preloader from './../../common/Preloader';\r\n\r\nconst Content = (props) => {\r\n\r\n\r\n\tif (!props.profile) {\r\n\t\treturn <Preloader/>\r\n\t}\r\n\r\n\r\n\treturn <div> <Profile  saveProfile = {props.saveProfile}\r\n\t\t\t\t\t\t   profile = {props.profile}\r\n\t\t\t\t\t\t   savePhoto = {props.savePhoto} \r\n\t\t\t\t\t\t   isOwner = {props.isOwner} \r\n\t\t\t\t\t\t   status = {props.status} \r\n\t\t\t\t\t\t   updateStatus = {props.updateStatus} />\r\n\t\t\r\n\t\t<Posts \r\n\t\t\tnewPostText = {props.newPostText}\r\n\t\t\tstateWall = {props.stateWall}\r\n\t\t\taddPostwall = {props.addPostwall}\r\n\t\t\tonChange = {props.onChange}\r\n\t\t/>\r\n\t\t</div>\r\n\r\n}\r\n\r\n\r\nexport default Content; ","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from\t\"react-redux\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tisAuth : state.Auth.isAuth \r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\tclass RedirectComponent extends React.Component {\r\n\t\trender () {\r\n\t\t\tif (!this.props.isAuth) return <Redirect to='/login' />\r\n\t\treturn <Component {...this.props} />\r\n\t\t}\r\n\t}\r\n\r\n\tlet ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent);\r\n\r\n\treturn ConnectedAuthRedirectComponent; \r\n}","import {addPostwall, onChange, getUserProfile, getStatus, updateStatus, savePhoto, saveProfile} from './../../redux/profile-reducer';\r\nimport Content from './Content';\r\nimport {connect} from\t\"react-redux\";\r\nimport React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {withAuthRedirect} from './../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n\trefreshProfile () {\r\n\t\tlet userId = this.props.match.params.userId;\r\n\t\tif (!userId) { userId = this.props.id;};\r\n\t\tif (!userId) {this.props.history.push('/login');}\r\n\t\tthis.props.getUserProfile(userId)\r\n\t\tthis.props.getStatus(userId)\r\n\r\n\t}\r\n\r\n\tcomponentDidMount () {\r\n\t\tthis.refreshProfile()\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\r\n\t\tif (prevProps.match.params.userId !== this.props.match.params.userId) {\r\n\t\t\tthis.refreshProfile()\r\n\t\t}\r\n\t}\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<Content {...this.props} isOwner = {!!this.props.match.params.userId}/>\r\n\t\t)\r\n\t}\r\n\r\n\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tnewPostText : state.ProfilePage.newPostText,\r\n\t\tstateWall : state.ProfilePage.posts,\r\n\t\tprofile : state.ProfilePage.profile,\r\n\t\tstatus : state.ProfilePage.status,\r\n\t\tid : state.Auth.id\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport default compose(withAuthRedirect, withRouter, connect(mapStateToProps,{addPostwall, onChange, getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}))(ProfileContainer)\r\n\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport style from './DialogItem.module.css'\r\n\r\nconst DialogItem = (props) =>{\r\n\treturn (\r\n\t\t<div className = {style.dialogItem}><NavLink\r\n\t\t to = {'/dialogs/' + props.id}>{props.name}</NavLink>\t\t\t\r\n\t\t\r\n\t\t</div>\t\r\n\t)\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport style from './dialogsMessage.module.css';\r\n\r\nconst DilaogMessage = (props) => {\r\n\r\n\treturn <div className = {style.message}>\r\n\t\t\t{props.message}\r\n\t</div>\r\n\t\r\n} \r\n\r\nexport default DilaogMessage;","import React from 'react';\r\nimport style from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport DialogMessage from './DialogsMessage/DIalogsMessage';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {required, maxLengthCreator} from './../../utils/validators/validators';\r\nimport {Textarea} from './../../common/FormsControls/FormControls';\r\n\r\nlet maxLength69 = maxLengthCreator(69);\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\t\tlet CurrentDialog = props.states.users.map( di => <DialogItem\r\n\t  \tid ={di.id}\r\n\t  \tname ={di.name}\r\n\t  \tkey = {di.id}\r\n\t  \t /> )\r\n\r\n\r\n\t\tlet DialogsMessage = props.states.messages.map( msg => <DialogMessage \r\n\t\tmessage = {msg.message} \r\n\t\tid = {msg.id}\r\n\t\tkey = {msg.id}\r\n\t\t /> )\r\n\t\t\r\n\t\tlet addMessage = (value) => {\r\n\t\t\tprops.addMessage(value.newMessageBody)\r\n\t\t}\r\n\r\n\r\n\r\n\treturn <div className = {`${style.wrapperitem} wrapper`}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{CurrentDialog}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className = {style.message}>\r\n\r\n\t\t\t\t\t{DialogsMessage}\r\n\r\n\t\t\t\t\t<AddMessageFormRedux  onSubmit = {addMessage}/>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\t\t\r\n\t\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n\r\n\r\n\t\treturn\t<form onSubmit = {props.handleSubmit}>\t\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Field  component = {Textarea} \r\n\t\t\t\t\t\t\tname = {'newMessageBody'} \r\n\t\t\t\t\t\t\tplaceholder = {'Enter your message'}\r\n\t\t\t\t\t\t\tvalidate = {[required, maxLength69]}/>\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div><button className = {style.knopka}> Send Nudes </button></div>\r\n\t\t\t\t</form>\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form : 'messages'})(AddMessageForm);\r\n\r\nexport default Dialogs;\r\n","const ADD_MESSAGE = 'ADD_MESSAGE'; \r\n\r\nlet initialState = {\r\n\tusers:[\r\n\t\t\t{id: 1, name: 'Dima'},\r\n\t\t\t{id: 2, name: 'Dasha'},  \r\n\t\t\t{id: 4, name: 'Dina'},\r\n\t\t\t{id: 8, name: 'Daneg'}, \r\n\t\t\t{id: 15, name: 'Demid'}, \r\n\t\t\t{id: 12, name: 'Dustin'}],\r\n\r\n\tmessages:[\r\n\t\t\t{message : 'will', id : 6},\r\n\t\t\t{message : 'u', id : 7},\r\n\t\t\t{message : 'make me', id : 8},\r\n\t\t\t{message : 'a sandwich', id : 9}]\r\n}\r\n\r\n\r\nlet dialogsReducer = (state = initialState, action) => {\r\n\t\r\n\tswitch (action.type) {\r\n\t\tcase ADD_MESSAGE:{\r\n\t\t\tlet\tstateCopy = {...state,\r\n\t\t\t messages : [...state.messages, {message: action.message}],\r\n\t\t\tnewMessageBody : ''}\r\n\t\t\treturn\tstateCopy;\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn\tstate;\t\r\n\t}\r\n}\r\n\r\nexport let addMessageCreator = (message) => {\r\n\treturn ({type : 'ADD_MESSAGE', message})\r\n}\r\n\r\n\r\n\r\n\r\nexport default dialogsReducer;\r\n\r\n","import Dialogs from './Dialogs';\r\nimport {addMessageCreator} from './../../redux/dialogs-reducer';\r\nimport {connect} from\t\"react-redux\";\r\nimport {withAuthRedirect} from './../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\nlet mapStateToProps\t= (state) => {\r\n\treturn\t{ \r\n\t\tstates\t : state.MessagesPage,\r\n\t}\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\r\n\treturn\t{\t\t\r\n\t\taddMessage : (value) => {\r\n\t\t\t\tdispatch(addMessageCreator(value))\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport default compose(withAuthRedirect, connect(mapStateToProps, mapDispatchToProps))(Dialogs)\r\n\r\n","import React, {useState} from 'react';\r\nimport styles from './../components/Users/users.module.css'\r\n\r\nlet Paginator = (props, {portionSize = 9}) => {\r\n\r\n\tlet [portionNumber, setPortionNumber] = useState(1);\r\n\tlet pagesCount = Math.ceil(props.totalUsersCount/props.pageSize);\r\n\tlet pages = [];\r\n\tfor (let i=1; i < pagesCount; i++ ) {\r\n\t\tpages.push(i);\r\n\t}\r\n\tlet portionCount = Math.ceil(pagesCount/portionSize);\r\n\tlet firstOfPortionNumber = portionSize*(portionNumber - 1) + 1;\r\n\tlet lastOfPortionNumber = portionSize*portionNumber;\r\n\r\n\treturn \t<div className = {styles.but}>\r\n\t\t\t\t{ portionNumber > 1  &&  <button  onClick = {() =>setPortionNumber(portionNumber - 1)}>PREV</button> }\r\n\r\n\t\t\t\t\t{pages.filter(p => p >= firstOfPortionNumber && p <= lastOfPortionNumber ).map(p => { return <span className = {props.currentPage === p \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? styles.cur \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: styles.uncur} \r\n\t\t\t\t\t\t\t\t\t\t\tonClick = {() => {props.onPageChanged(p)}}\r\n\t\t\t\t\t\t\t\t\t\t\tkey = {p.toString()}>{' ' +p}</span> })}\r\n\t\t\r\n\t\t\t\t{ portionNumber < portionCount  &&  <button onClick = {() =>setPortionNumber(portionNumber + 1)}>NEXT</button> }\r\n\t\t\t</div>\r\n\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport styles from './users.module.css'\r\nimport user from './../../assets/images/2.jpg';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Paginator from './../../common/Paginator';\r\n\r\n\r\nlet Users = (props) => {\r\n\r\n\treturn <div>\r\n\t\t<Paginator {...props}/>\r\n\t\t\t\t{\r\n\t\tprops.users.map( aua => <div  className = {styles.user} key = {aua.id} >\r\n\t\t\t\r\n\t\t\t<NavLink to = {'/profile/' + aua.id}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<img alt = {'Zerg'} src = {aua.photos.small != null \r\n\t\t\t\t\t\t\t\t\t\t? aua.photos.small \r\n\t\t\t\t\t\t\t\t\t\t: user} className = {styles.kart}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{aua.name} \r\n\t\t\t\t</div>\t\t\r\n\t\t\t</NavLink>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{aua.followed ? <button disabled = {props.followingInProgress.some(id => id === aua.id)} \r\n\t\t\t\t\t\t\t\t\t\t\tonClick = {() => {props.unfollow(aua.id)}}\r\n\t\t\t\t\t\t\t\t\t>UnFollow</button> \r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t: <button \tdisabled = {props.followingInProgress.some(id => id === aua.id)} \r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick = {() => {props.follow(aua.id)}}\r\n\t\t\t\t\t\t\t\t\t>Follow</button>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t</div>)\r\n\t\t\t\t}\r\n\t</div>\r\n\t\r\n\r\n}\r\n\r\nexport default Users;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import userAPI from './../api/api.js';\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USER_COUNT = 'SET_TOTAL_USER_COUNT';\r\nconst IS_FETCHING = 'IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n\tusers:[],\r\n\tpageSize:16,\r\n\ttotalUsersCount:0,\r\n\tcurrentPage:1,\r\n\tisFetching: false,\r\n\tfollowingInProgress: []\r\n}  \r\n\r\nconst friendsReducer = (state = initialState , action) => {\r\n\t\r\n\tswitch (action.type) {\r\n\t\r\n\t\tcase FOLLOW:\r\n\t\t return {\r\n\t\t \t...state, \r\n\t\t\t users : state.users.map( u => { \r\n\t\t\t \tif (u.id === action.userID) {\r\n\t\t\t\t\t\t\treturn {...u, followed : true}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\treturn u;\t\r\n\t\t\t\t\t}) \r\n\t\t }\r\n\t \t\t\r\n\t \tcase UNFOLLOW: \r\n\t \t return {\r\n\t \t \t...state, \r\n\t\t\t\tusers : state.users.map( u => {\r\n\t\t\t\t\t\tif (u.id === action.userID) {\r\n\t\t\t\t\t\t\treturn {...u, followed : false}\r\n\t\t\t\t\t\t} \r\n\t\t\t\t\treturn u;\t\r\n\t\t\t\t\t}) \r\n\t\t }\r\n\t\t\r\n\t\tcase SET_USERS:\r\n\t\t return {...state, users : [ ...action.users]}\r\n\t\t\t\t\r\n\t\tcase SET_CURRENT_PAGE:\r\n\t\t return {...state, currentPage : action.currentPage}\r\n\r\n\t\t case SET_TOTAL_USER_COUNT:\r\n\t\t return {...state, totalUsersCount : action.count}\r\n\r\n\t\t case IS_FETCHING:\r\n\t\t return {...state, isFetching : action.isf}\r\n\r\n\t\t case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n\t\t return {...state, followingInProgress : action.isFetching \r\n\t\t \t? [...state.followingInProgress, action.userId]\r\n\t\t \t: state.followingInProgress.filter(id => id !== action.userId)}\r\n\r\n\r\n\t\tdefault:\r\n\t \t\treturn state;\r\n\t \t\t\r\n\t}\r\n}\r\n\r\nexport let followSuccess = (userID) => {\r\n\treturn ({type : FOLLOW, userID})\r\n}\r\n\r\n\r\nexport let unfollowSuccess = (userID) => {\r\n\treturn ({type : UNFOLLOW, userID })\r\n}\r\n\r\nexport let setUsers = (users) => { \r\n\treturn ({type : SET_USERS , users})\r\n}\r\n\r\nexport let setCurrentPage = (currentPage) => {\r\n\treturn ({type : SET_CURRENT_PAGE, currentPage})\r\n}\r\n\r\nexport let setTotalUserCount = (count) => {\r\n\treturn ({type : SET_TOTAL_USER_COUNT, count})\r\n}\r\n\r\nexport let toggleIsFetching = (isf) => {\r\n\treturn ({type : IS_FETCHING, isf})\r\n}\r\n\r\nexport let toggleFollowingProgress = (isFetching, userId) => {\r\n\treturn ({type : TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId})\r\n}\r\n\r\nexport const getUserThunkCreator = (currentPage, pageSize) => { \t\r\n\treturn (dispatch) => {\r\n\t\t\tdispatch(toggleIsFetching(true));\r\n\t\t\tdispatch(setCurrentPage(currentPage))\r\n\t\tuserAPI.getUsers(currentPage, pageSize)\r\n\t\t\t\t\t\t.then(data => { \r\n\t\t\t\t\t\t\tdispatch(toggleIsFetching(false));\r\n\t\t\t\t\t\t\tdispatch(setUsers(data.items));\r\n\t\t\t\t\t\t\tdispatch(setTotalUserCount(data.totalCount))})\r\n\r\n\t}\r\n}\r\n\r\nexport const follow = (id) => (dispatch) => {\r\n\t\tdispatch(toggleFollowingProgress(true, id));\r\n\t\tuserAPI.follow(id)\r\n\t\t.then( response => { if (response.data.resultCode === 0) {\r\n\t\t\tdispatch(followSuccess(id))}\r\n\t\t\tdispatch(toggleFollowingProgress(false, id))\r\n\t\t\t\t\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\r\n\r\nexport const unfollow = (id) => {\r\n\treturn (dispatch) => {\r\n\t\tdispatch(toggleFollowingProgress(true, id));\r\n\t\tuserAPI.unfollow(id)\r\n\t\t.then( response => { if (response.data.resultCode === 0) {\r\n\t\t\tdispatch(unfollowSuccess(id))}\r\n\t\t\tdispatch(toggleFollowingProgress(false, id))\r\n\t\t\t\t\t\t\t}\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default friendsReducer;\r\n\r\n\r\nwindow.fie = initialState.users;\r\n","export const getUsers = (state) => {\r\n\treturn state.Friends.users\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Users from './Users';\r\nimport {follow,\r\n \tunfollow, setUsers,\r\n   \tsetCurrentPage,\tsetTotalUserCount,\r\n  \ttoggleIsFetching, toggleFollowingProgress,\r\n \tgetUserThunkCreator} from './../../redux/friends-reducer';\r\nimport Preloader from './../../common/Preloader';\r\nimport {withAuthRedirect} from './../../hoc/withAuthRedirect';\r\nimport {getUsers} from './../../redux/users-selectors';\r\n\r\nclass UsersContainer  extends React.Component  {\r\n\r\n\r\n\tcomponentDidMount () {\r\n\t\t\tthis.props.getUserThunkCreator(this.props.currentPage, this.props.pageSize)\t\r\n\t}\r\n\t\r\n\r\n\tonPageChanged = (p) => {\r\n\t\t\tthis.props.getUserThunkCreator(p, this.props.pageSize)\t\t\r\n\t}\r\n\r\n\trender () {  \r\n\t\treturn <div>\r\n\t\t{this.props.isFetching ? <Preloader/> : null }\r\n\t\t<Users follow = {this.props.follow}\r\n\t\t\tunfollow = {this.props.unfollow}\r\n\t\t\ttotalUsersCount = {this.props.totalUsersCount}\r\n\t\t\tpageSize = {this.props.pageSize}\r\n\t\t\tonPageChanged = {this.onPageChanged}\r\n\t\t\tcurrentPage = {this.props.currentPage}\r\n\t\t\tusers = {this.props.users}\r\n\t\t\tfollowingInProgress = {this.props.followingInProgress}\r\n\t\t/>\r\n\t\t</div>\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\t\treturn {\r\n\t\t\tusers : getUsers(state),\r\n\t\t\tpageSize : state.Friends.pageSize,\r\n\t\t\ttotalUsersCount : state.Friends.totalUsersCount,\r\n\t\t\tcurrentPage : state.Friends.currentPage,\r\n\t\t\tisFetching : state.Friends.isFetching,\r\n\t\t\tfollowingInProgress : state.Friends.followingInProgress\r\n\t\t}\r\n}\r\n\r\nlet withRedirrect = withAuthRedirect(UsersContainer)\r\n\r\nexport default connect(mapStateToProps, {follow, unfollow,\r\n\t\t\t\t\t\t\t\t\t\tsetUsers, setCurrentPage,\r\n\t\t\t\t\t\t\t\t\t\tsetTotalUserCount, toggleIsFetching,\r\n\t\t\t\t\t\t\t\t\t\ttoggleFollowingProgress, getUserThunkCreator})(withRedirrect);","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {connect} from 'react-redux';\r\nimport {login} from './../../redux/auth-reducer';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst LoginForm = (props) => {\r\n\treturn <form onSubmit = {props.handleSubmit}>\r\n\t\t<div>\r\n\t\t\t<Field placeholder = {'Login'} name = {'email'} component = {'input'} />\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<Field placeholder = {'Password'} name = {'password'} component = {'input'} type = {'password'} />\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<Field type = {'checkbox'} name = {'rememberMe'} component = {'input'} />remember me\r\n\t\t</div>\r\n\t\t{props.error && <span style = { { color : 'yellow' , backgroundColor : 'Black', marginLeft : '320px', padding : '12px'} }>{props.error}</span>\t}\t\r\n\t\t<div>\r\n\t\t\t<button>Login</button>\r\n\t\t</div>\r\n\t</form>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form : 'login'})(LoginForm)\r\n\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n\t\tconst onSubmit = (formData) => {\r\n\t\t\tprops.login(formData.email, formData.password, formData.rememberMe);\r\n\t\t}\r\n\r\n\t\tif (props.isAuth) {\r\n\t\t\treturn <Redirect to = {'/profile'}/>\r\n\t\t}\r\n\r\n\treturn <div>\r\n\t\t\t<h1>Login or Sign in</h1>\r\n\t\t\t<form>\r\n\t\t\t\t<LoginReduxForm onSubmit = {onSubmit}/>\r\n\t\t\t</form>\r\n\t</div>\r\n} \r\n\r\nconst mapStateToProps = (state) => ({\r\n\tisAuth : state.Auth.isAuth\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {getAuthUserData} from './auth-reducer';\r\nconst INITIALAZED_SUCCESS = 'INITIALAZED_SUCCESS';\r\n\r\nlet initialState = { \r\n\tinitialized : false\r\n}\r\n\r\nconst appReducer = ( state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\t\t\r\n\t \tcase INITIALAZED_SUCCESS:\r\n\t \t\t\treturn {\r\n\t \t\t\t\t...state,\r\n\t \t\t\t\tinitialized: true\t \t\t\t\t\r\n\t \t\t\t};\r\n\t \t\r\n\t \tdefault:\r\n\t \t\treturn state;\r\n\r\n\t}\r\n}\r\n\r\nexport let setInitialaizedSuccess = () => ({type : 'INITIALAZED_SUCCESS' })\r\n\r\nexport let initializeApp = () => (dispatch) => {\r\n\tlet promise = dispatch(getAuthUserData());\r\n\tPromise.all([promise]).then(() => {dispatch(setInitialaizedSuccess());})\r\n}\r\n\r\n\r\n\r\nexport default appReducer;\r\n\r\n","import React from 'react';\nimport './App.css';\nimport Nav from './components/Nav/Nav';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport ProfileContainer from './components/Profile/ContentContainer';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport UsersContainer from\t'./components/Users/UsersContainer';\nimport Login from './components/Login/Login';\nimport {Route} from 'react-router-dom';\nimport {initializeApp} from './redux/app-reducer';\nimport {connect} from\t\"react-redux\";\nimport {compose} from 'redux';\nimport {withRouter} from 'react-router-dom';\nimport Preloader from './common/Preloader';\n\nclass App extends React.Component {\n\n\tcomponentDidMount () {\n\t\tthis.props.initializeApp();\t\n\n\t}\n\n\n\trender () {\n\t\tif (!this.props.initialized) { return <Preloader/>\n\t\t}\n\n  \t\treturn (\n\t\t\t\t<div className=\"App\">\n\n\t\t\t   \t \t<HeaderContainer /> \n\t\t\n\t\t\t\t  \t\t\t<Nav /> \n\t\t\t\t   \t     <Route path = '/profile/:userId?' render = {() => <ProfileContainer\n\t\t\t\t   \t     />} />\n\t\n\t\t\t\t   \t     <Route path = '/dialogs' render = {() => <DialogsContainer\n\t\t\t\t   \t      />}/>\n\t\n\t\t\t\t   \t     <Route path = '/friends' render = {() => <UsersContainer\n\t\t\t\t   \t      />}/>\n\t\n\t\t\t\t   \t     <Route path = '/login' render = {() => <Login\n\t\t\t   \t      />}/>\n\n\t\t\t\t</div>\n\t    \t);\n\t\t}\n}\n\nlet mapStateToProps = (state) => ({\n\tinitialized : state.app.initialized\n})\n\nexport default compose(withRouter, connect(mapStateToProps, {initializeApp}))(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport friendsReducer from './friends-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport appReducer from './app-reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nlet reducers = combineReducers({\r\n ProfilePage : profileReducer,\r\n MessagesPage : dialogsReducer,\r\n Friends : friendsReducer,\r\n Auth : authReducer,\r\n form : formReducer,\r\n app : appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware)); \r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport store from './redux/redux-store';\nimport {Provider} from \"react-redux\";\n\n\n\n\tReactDOM.render (\n\t  <React.StrictMode>\n\t\t    <BrowserRouter>\n\t\t\t\t<Provider store = {store}>\n\t\t\t\t\t\t<App  />\n\t\t\t\t</Provider>\n\t\t    </BrowserRouter>\n\n\t  </React.StrictMode>,\t  document.getElementById('root')\n\t);\n\n\n\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"users_user__39yV9\",\"kart\":\"users_kart__2ZKVC\",\"uncur\":\"users_uncur__2OkXE\",\"cur\":\"users_cur__7Dcvx\",\"active\":\"users_active__2IH1Y\",\"but\":\"users_but__18HOG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toSp\":\"FormControls_toSp__3P_xm\",\"error\":\"FormControls_error__1sAJv\"};","module.exports = __webpack_public_path__ + \"static/media/2.0b6f9d42.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperitem\":\"Dialogs_wrapperitem__1_oiw\",\"message\":\"Dialogs_message__2KlN7\",\"knopka\":\"Dialogs_knopka__120OG\"};"],"sourceRoot":""}